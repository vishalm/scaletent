version: '3.8'

services:
  # ScaleTent application
  scaletent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scaletent-app
    restart: unless-stopped
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - ./logs:/app/logs
    ports:
      - "5000:5000"  # Web interface
      - "8765:8765"  # WebSocket
    environment:
      - PYTHONUNBUFFERED=1
      - SCALETENT_CONFIG=/app/config/config.yaml
      - MONGODB_URI=mongodb://mongodb:27017/
    devices:
      - /dev/video0:/dev/video0  # Pass through camera
    depends_on:
      - mongodb
      - redis
    networks:
      - scaletent-network

  # MongoDB for data storage
  mongodb:
    image: mongo:5.0
    container_name: scaletent-mongodb
    restart: unless-stopped
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=scaletent
    networks:
      - scaletent-network

  # Redis for caching and pub/sub
  redis:
    image: redis:6.2-alpine
    container_name: scaletent-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - scaletent-network

  # Nginx for web proxy
  nginx:
    image: nginx:1.21-alpine
    container_name: scaletent-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - scaletent
    networks:
      - scaletent-network

networks:
  scaletent-network:
    driver: bridge

volumes:
  mongodb-data:
  redis-data: